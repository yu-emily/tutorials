{"componentChunkName":"component---src-templates-lesson-jsx","path":"/programming/oop/encapsulation/","result":{"data":{"site":{"siteMetadata":{"title":"The Programming Foundation"}},"mdx":{"frontmatter":{"title":"Encapsulation"}}},"pageContext":{"id":"57300c7c-8195-5c9e-99ac-bb5ae68d6a55","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Encapsulation\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Encapsulation\"), mdx(\"h3\", null, \"Encapsulation enables us to wrap the data and functions into a single unit.\"), mdx(\"p\", null, \"It binds the mechanism together as a protective shield that will prevent the classes or clients to access the internal data.  In a real-life scenario, a car a power steering machine has a complex system that enables the car movement. This system is tightly coupled and works synchronously, but the complexity is entirely hidden from the car user. The drive can only use this system through an interface. Also, the internal functions are completely independent of on-another and thus do not affect other mechanisms unless needed.\"), mdx(\"p\", null, \"Encapsulation enables:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The data binding within the system.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Protects it from the interference of the external system.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It helps in classes independently and prevents tight coupling.\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"staticQueryHashes":[]}