{"componentChunkName":"component---src-templates-lesson-jsx","path":"/os/kernel/","result":{"data":{"site":{"siteMetadata":{"title":"The Programming Foundation"}},"mdx":{"frontmatter":{"title":"Kernel"}}},"pageContext":{"id":"3a28d0cd-087b-5e5e-a19d-99d9d67b366f","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Kernel\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Note = makeShortcode(\"Note\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Kernel\"), mdx(\"h3\", null, \"The kernel is the core component of an operating system. It takes complete control over the system by bridging the gap between the users and hardware.\"), mdx(\"h2\", null, \"Main tasks of the kernel\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Memory Management\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Device Management\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Performance Management\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Resource Management\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"System Management\")), mdx(\"p\", null, \"There are different types of Kernels:\"), mdx(\"h3\", null, \"Monolithic kernel\"), mdx(\"p\", null, \"These are the basic types where the Kernel and OS share the same memory space. The security concern for these machines is less. Usually faster than other devices as space is the same.\"), mdx(Note, {\n    mdxType: \"Note\"\n  }, mdx(\"b\", null, \"Linux\"), \" is not an operating system. \", mdx(\"b\", null, \"Linux\"), \" is Monolithic kernel.\"), mdx(\"h3\", null, \"Microkernel\"), mdx(\"p\", null, \"Microkernels have the minimum components required to build an operating system.\"), mdx(\"h3\", null, \"Hybrid kernel\"), mdx(\"p\", null, \"These are a mix of Microkernel and Monolithic kernel.\"), mdx(Note, {\n    mdxType: \"Note\"\n  }, mdx(\"b\", null, \"Windows\"), \" and \", mdx(\"b\", null, \"macOS\"), \" have Hybrid kernels.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"staticQueryHashes":[]}